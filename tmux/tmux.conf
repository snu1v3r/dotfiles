# Enable mouse support
set -g mouse on

# Copy mode for vi copies to c
unbind-key -T copy-mode-vi v
setw -g mode-keys vi
bind-key -T copy-mode-vi 'v' send -X begin-selection     # Begin selection in copy mode.
bind-key -T copy-mode-vi 'C-v' send -X rectangle-toggle  # Begin selection in copy mode.
bind-key -T copy-mode-vi 'y' send -X copy-selection      # Yank selection in copy mode and send to tmux buffer
bind-key -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel "xclip -in -selection clipboard" # Yank selection in copy mode and send to clipboard and quit selection mode

# Set default terminal detection
set -g default-terminal "screen-256color"

# Set history
set -g history-limit 20000

# Change default prefix key to `
unbind C-b
set-option -g prefix `
bind ` send-prefix

# Disables automatic renaming of windows
setw -g allow-rename off
setw -g automatic-rename off

# Optimizes the resize to the window that is actually attached to the session
setw -g aggressive-resize on

# Start index of window/pane with 1, because we're humans, not computers
set -g base-index 1
setw -g pane-base-index 1

# Default bind for c will create a new window in the directory where tmux was started. Prefix-C will create a new pane in the current directory
bind C new-window -c "#{pane_current_path}"

# Prefix-S will create a new session in the current director
bind S new-session -c "#{pane_current_path}"




# =====================================
# ===           Theme               ===
# =====================================

# Feel free to NOT use this variables at all (remove, rename)
# this are named colors, just for convenience
color_orange="colour166" # 208, 166
color_purple="colour134" # 135, 134
color_green="colour076" # 070
color_blue="colour39"
color_yellow="colour220"
color_red="colour160"
color_black="colour232"
color_white="white" # 015

# This is a theme CONTRACT, you are required to define variables below
# Change values, but not remove/rename variables itself
color_dark="$color_black"
color_light="$color_white"
color_session_text="$color_black"
color_status_text="colour245"
color_main="$color_orange"
color_secondary="$color_orange"
color_level_ok="$color_green"
color_level_warn="$color_yellow"
color_level_stress="$color_red"
color_window_off_indicator="colour088"
color_window_off_status_bg="colour238"
color_window_off_status_current_bg="colour254"

# =====================================
# ===    Appearence and status bar  ===
# ======================================

set -g mode-style "fg=default,bg=$color_main"

# command line style
set -g message-style "fg=$color_main,bg=$color_dark"

# status line style
set -g status-style "fg=$color_black,bg=$color_yellow"

# window segments in status line
set -g window-status-separator ""
separator_powerline_left=""  # This is the triangle left of the active panel name
separator_powerline_right="" # This is the triangle right of the active panel name.

# setw -g window-status-style "fg=$color_status_text,bg=$color_dark"
setw -g window-status-format " #I:#W "
setw -g window-status-current-style "fg=$color_light,bold,bg=$color_main"
setw -g window-status-current-format "#[fg=$color_yellow,bg=$color_main]$separator_powerline_right#[default] #I:#W# #[fg=$color_main,bg=$color_yellow]$separator_powerline_right#[default]"

# when window has monitoring notification
setw -g window-status-activity-style "fg=$color_main"

# outline for active pane
setw -g pane-active-border-style "fg=$color_main"

# general status bar settings
set -g status on
set -g status-interval 5
set -g status-position bottom
set -g status-justify left
set -g status-right-length 100

# define widgets we're going to use in status bar
# note, that this is not the complete list, some of them are loaded from plugins
wg_session="#[fg=$color_session_text] #S #[default]"
wg_is_zoomed="#[fg=$color_dark,bg=$color_secondary]#{?window_zoomed_flag,[Z],}#[default]"
wg_prefix="#[fg=$color_dark,bg=$color_secondary]#{?client_prefix,[`],#[default]}#[default]"
wg_date="#[fg=$color_secondary]%h %d %H:%M#[default]"
wg_user_host="#[fg=$color_secondary]#(whoami)@#H#[default]"
# TODO: highlighted for nested local session as well
wg_is_keys_off="#[fg=$color_light,bg=$color_window_off_indicator]#([ $(tmux show-option -qv key-table) = 'off' ] && echo 'OFF')#[default]"

set -g status-left "$wg_session"
set -g status-right "$wg_prefix $wg_is_zoomed $wg_is_keys_off  $wg_user_host | $wg_date"
set -g escape-time 20

# Prompt to rename session right after it's created

set-hook -g after-new-session 'command-prompt -I "#{session_name}" "rename-session '%%'"'



bind -T root F12  \
    set prefix None \;\
    set key-table off \;\
    set status-style "fg=$color_status_text,bg=$color_window_off_status_bg" \;\
    set window-status-current-format "#[fg=$color_window_off_status_bg,bg=$color_window_off_status_current_bg]$separator_powerline_right#[default] #I:#W# #[fg=$color_window_off_status_current_bg,bg=$color_window_off_status_bg]$separator_powerline_right#[default]" \;\
    set window-status-current-style "fg=$color_dark,bold,bg=$color_window_off_status_current_bg" \;\
    if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
    refresh-client -S \;\

bind -T off F12 \
  set -u prefix \;\
  set -u key-table \;\
  set -u status-style \;\
  set -u window-status-current-style \;\
  set -u window-status-current-format \;\
  refresh-client -S


if-shell 'test -n "$SSH_CLIENT"' \
    'source-file ~/dotfiles/tmux/tmux_remote.conf'

